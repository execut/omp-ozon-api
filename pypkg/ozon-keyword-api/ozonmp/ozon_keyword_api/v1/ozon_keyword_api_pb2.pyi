"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Keyword(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    FOO_FIELD_NUMBER: builtins.int
    CREATED_FIELD_NUMBER: builtins.int
    id: builtins.int
    foo: builtins.int
    @property
    def created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        foo: builtins.int = ...,
        created: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created", b"created"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created", b"created", "foo", b"foo", "id", b"id"]) -> None: ...

global___Keyword = Keyword

@typing_extensions.final
class DescribeKeywordV1Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYWORD_ID_FIELD_NUMBER: builtins.int
    keyword_id: builtins.int
    def __init__(
        self,
        *,
        keyword_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keyword_id", b"keyword_id"]) -> None: ...

global___DescribeKeywordV1Request = DescribeKeywordV1Request

@typing_extensions.final
class DescribeKeywordV1Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> global___Keyword: ...
    def __init__(
        self,
        *,
        value: global___Keyword | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["value", b"value"]) -> None: ...

global___DescribeKeywordV1Response = DescribeKeywordV1Response
